{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","_useState","useState","_useState2","_slicedToArray","moviedata","setMoviedata","_useState3","_useState4","errorMessage","setErrorMessage","_useState5","_useState6","setMovie","_useState7","_useState8","loading","setLoading","_useState9","_useState10","movieTitle","setMovieTitle","useEffect","Title","Plot","Poster","concat","imdbID","_Fragment","onSubmit","e","query","preventDefault","fetch","then","res","json","catch","Response","Error","finally","htmlFor","type","id","value","onChange","target","placeholder","cn","disabled","onClick","_toConsumableArray","undefined","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70e78e56.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[]\n  setMovies: (arg: Movie[]) => void\n};\nexport const FindMovie: React.FC<Props> = ({ setMovies, movies }) => {\n  // eslint-disable-next-line max-len\n  const [moviedata, setMoviedata] = useState<MovieData | undefined>();\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [movie, setMovie] = useState<Movie>();\n  const [loading, setLoading] = useState(false);\n  const [movieTitle, setMovieTitle] = useState('');\n\n  useEffect(() => {\n    if (moviedata) {\n      setMovie({\n        title: moviedata.Title,\n        description: moviedata.Plot,\n        imgUrl: moviedata.Poster,\n        imdbUrl: `https://www.imdb.com/title/${moviedata.imdbID}`,\n        imdbId: moviedata.imdbID,\n      });\n    }\n  }, [moviedata]);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          setLoading(true);\n          getMovie(movieTitle)\n\n            .then(res => {\n              if ('imdbID' in res) {\n                setMoviedata(res);\n                setErrorMessage(false);\n              } else {\n                setErrorMessage(true);\n              }\n            })\n            .finally(() => setLoading(false));\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              value={movieTitle}\n              onChange={(e) => setMovieTitle(e.target.value)}\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': errorMessage,\n              })}\n            />\n          </div>\n\n          { errorMessage && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!movieTitle}\n              className={cn('button is-light', { 'is-loading': loading })}\n            >\n              {moviedata ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {moviedata && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  if (movie) {\n                    setMovies([...movies, movie]);\n                    setMoviedata(undefined);\n                    setMovieTitle('');\n                    setErrorMessage(false);\n                  }\n                }}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {moviedata\n      && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          {movie && <MovieCard movie={movie} />}\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=26b820e';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        { movies\n        && <MoviesList movies={movies} />}\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovies={setMovies}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}